---
// src/components/widget/DirectoryTree.astro
import { getCollection } from "astro:content";
import { url } from "../../utils/url-utils";
import WidgetLayout from "./WidgetLayout.astro";

const allPosts = await getCollection(
	"posts",
	({ data }) => data.draft !== true,
);

const directoryTree: Record<string, any> = {};

allPosts.forEach((post) => {
	// CORREGIDO: usar post.slug en lugar de post.id
	const pathParts = post.slug.split("/");
	let currentLevel = directoryTree;

	for (let i = 0; i < pathParts.length - 1; i++) {
		const part = pathParts[i];
		if (!currentLevel[part]) {
			currentLevel[part] = {};
		}
		currentLevel = currentLevel[part];
	}

	const fileName = pathParts[pathParts.length - 1];
	currentLevel[fileName] = {
		slug: post.slug,
		title: post.data.title,
	};
});

function renderTree(tree: Record<string, any>) {
	const keys = Object.keys(tree);
	if (keys.length === 0) return "";

	let html = '<ul class="sub-list hidden">';
	for (const key of keys) {
		const node = tree[key];
		if (node.slug) {
			html += `<li class="file"><a href="${url(`/posts/${node.slug}/`)}">${node.title}</a></li>`;
		} else {
			const hasChildren = Object.keys(node).length > 0;
			html += `<li class="folder"><span class="folder-toggle">${key}</span>`;
			if (hasChildren) {
				html += renderTree(node);
			}
			html += "</li>";
		}
	}
	html += "</ul>";
	return html;
}

const treeHtml = renderTree(directoryTree);
---

<WidgetLayout name="Navegación por Carpetas" id="directory-tree">
    <Fragment set:html={treeHtml.replace('class="sub-list hidden"', 'class="sub-list"')}/>
</WidgetLayout>

<script>
    function initializeTreeInteraction() {
        const folderToggles = document.querySelectorAll('#directory-tree .folder-toggle');
        folderToggles.forEach(toggle => {
            if (toggle instanceof HTMLElement) {
                if (toggle.dataset.initialized) return;
                toggle.dataset.initialized = 'true';
                toggle.addEventListener('click', () => {
                    const subList = toggle.nextElementSibling;
                    if (subList && subList.tagName === 'UL') {
                        subList.classList.toggle('hidden');
                        if (toggle.parentElement) {
                            toggle.parentElement.classList.toggle('expanded');
                        }
                    }
                });
            }
        });
    }

    document.addEventListener('astro:page-load', initializeTreeInteraction);
    document.addEventListener('astro:after-swap', initializeTreeInteraction);
    
    // También inicializar en carga inicial
    initializeTreeInteraction();
</script>

<style is:global>
    #directory-tree ul {
        list-style: none;
        padding-left: 1rem;
        margin-top: 0.25rem;
    }
    #directory-tree .sub-list.hidden {
        display: none;
    }
    #directory-tree li {
        margin-bottom: 0.25rem;
    }
    #directory-tree .folder-toggle {
        cursor: pointer;
        display: flex;
        align-items: center;
        user-select: none;
        font-weight: 500;
        color: var(--btn-content);
        transition: color 0.2s, filter 0.2s;
    }
    #directory-tree .folder-toggle:hover {
        color: var(--primary);
        filter: brightness(1.2);
    }
    #directory-tree .folder > .folder-toggle::before {
        content: '📁';
        margin-right: 0.5rem;
    }
    #directory-tree .folder.expanded > .folder-toggle::before {
        content: '📂';
    }
    #directory-tree .file a {
        display: flex;
        align-items: center;
        text-decoration: none;
        color: var(--btn-content);
        font-size: 0.9em;
        transition: color 0.2s;
    }
    #directory-tree .file a:hover {
        color: var(--primary);
    }
    #directory-tree .file a::before {
        content: '📄';
        margin-right: 0.5rem;
        opacity: 0.8;
    }
</style>